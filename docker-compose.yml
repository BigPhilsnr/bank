version: '3.7'

services:
  mysql:
    image: mysql:latest
    # ports:
    # - "3306:3306"
  
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

    volumes:
      - ./mysql_data_volume:/var/lib/mysql

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    # ports:
    #   - "9092:9092"
    # expose:
    # - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000000
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "dtopoic:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  redis:
    image: "redis:latest"
    # ports: 
    #   - "6381:6379"
    volumes:
      - ./data:/data

  web:
    build: .
    working_dir: /app
    ports:
      - "4500:4500"
    volumes:
      - ./app:/app
      - ./wait-for-it.sh:/scripts/wait-for-it.sh
    depends_on:
      - mysql
      - redis
      - kafka
      - test
    command: >
      sh -c "npm install -g pm2
      && npm install
      && wait-for-it mysql:3306 -- wait-for-it kafka:9092 -- pm2-runtime start ecosystem.config.js"
   
  test:
    build: .
    working_dir: /app
    # ports:
    #   - "4600:4500"
    volumes:
      - ./app:/app
      - ./wait-for-it.sh:/scripts/wait-for-it.sh
    depends_on:
      - mysql
      - redis
      - kafka
    command: ["wait-for-it", "mysql:3306", "--", "wait-for-it", "kafka:9092", "--" , "npm", "install"]
 
      
